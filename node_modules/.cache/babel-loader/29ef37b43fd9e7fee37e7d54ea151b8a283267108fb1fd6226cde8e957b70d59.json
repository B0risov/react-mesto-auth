{"ast":null,"code":"import React from \"react\";\nclass Api extends React.Component {\n  constructor(props) {\n    super(props);\n    this._baseUrl = 'https://mesto.nomoreparties.co/v1/cohort-51/';\n    this._headers = {\n      authorization: '38f4a1b9-fdca-415d-86b5-0f7384ead109',\n      'Content-Type': 'application/json'\n    };\n    this._baseUrlAuth = 'https://auth.nomoreparties.co/';\n  }\n  _get(link) {\n    return fetch(this._baseUrl + link, {\n      method: 'GET',\n      headers: this._headers\n    }).then(res => this._getResponseData(res));\n  }\n  _post(link, model) {\n    return fetch(this._baseUrl + link, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify(model)\n    }).then(res => this._getResponseData(res));\n  }\n  _patch(link, model) {\n    return fetch(this._baseUrl + link, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify(model)\n    }).then(res => this._getResponseData(res));\n  }\n  _put(link) {\n    return fetch(this._baseUrl + link, {\n      method: 'PUT',\n      headers: this._headers\n    }).then(res => this._getResponseData(res));\n  }\n  _delete(link) {\n    return fetch(this._baseUrl + link, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(res => this._getResponseData(res));\n  }\n  _getResponseData(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n  getInitialCards() {\n    return this._get('cards');\n  }\n  getUserInformation() {\n    return this._get('users/me');\n  }\n  setUserUpdate(model) {\n    return this._patch('users/me', model);\n  }\n  setCreateCard(model) {\n    return this._post('cards', model);\n  }\n  setDeleteCard(cardId) {\n    return this._delete(`cards/${cardId}`);\n  }\n  setUserAvatar(model) {\n    return this._patch('users/me/avatar', model);\n  }\n  changeLikeCardStatus(cardId, like) {\n    if (like) {\n      return this._put(`cards/${cardId}/likes`);\n    } else {\n      return this._delete(`cards/${cardId}/likes`);\n    }\n  }\n  setRegistration(model) {\n    return fetch(`${this._baseUrlAuth}signup`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(model)\n    }).then(res => this._getResponseData(res));\n  }\n  getAuthorization(model) {\n    return fetch(`${this._baseUrlAuth}signin`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(model)\n    }).then(res => this._getResponseData(res));\n  }\n  getValidationToken() {\n    return fetch(`${this._baseUrlAuth}users/me`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        \"Authorization\": `Bearer ${localStorage.getItem('token')}`\n      }\n    }).then(res => this._getResponseData(res));\n  }\n}\nconst api = new Api();\nexport default api;","map":{"version":3,"names":["React","Api","Component","constructor","props","_baseUrl","_headers","authorization","_baseUrlAuth","_get","link","fetch","method","headers","then","res","_getResponseData","_post","model","body","JSON","stringify","_patch","_put","_delete","ok","json","Promise","reject","status","getInitialCards","getUserInformation","setUserUpdate","setCreateCard","setDeleteCard","cardId","setUserAvatar","changeLikeCardStatus","like","setRegistration","getAuthorization","getValidationToken","localStorage","getItem","api"],"sources":["/Users/matvej/dev/react-mesto-auth/src/utils/api.js"],"sourcesContent":["import React from \"react\";\n\nclass Api extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this._baseUrl = 'https://mesto.nomoreparties.co/v1/cohort-51/';\n        this._headers = {\n            authorization: '38f4a1b9-fdca-415d-86b5-0f7384ead109',\n            'Content-Type': 'application/json'\n        }\n        this._baseUrlAuth = 'https://auth.nomoreparties.co/';\n    }\n\n    _get(link) {\n        return fetch(this._baseUrl + link, {\n            method: 'GET',\n            headers: this._headers,\n        })\n            .then((res) => this._getResponseData(res))\n    }\n\n    _post(link, model) {\n        return fetch(this._baseUrl + link, {\n            method: 'POST',\n            headers: this._headers,\n            body: JSON.stringify(model)\n        })\n            .then((res) => this._getResponseData(res))\n    }\n\n    _patch(link, model) {\n        return fetch(this._baseUrl + link, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify(model)\n        })\n            .then((res) => this._getResponseData(res))\n    }\n\n    _put(link) {\n        return fetch(this._baseUrl + link, {\n            method: 'PUT',\n            headers: this._headers,\n        })\n            .then((res) => this._getResponseData(res))\n    }\n\n    _delete(link) {\n        return fetch(this._baseUrl + link, {\n            method: 'DELETE',\n            headers: this._headers,\n        })\n            .then((res) => this._getResponseData(res))\n    }\n\n    _getResponseData(res) {\n        if (res.ok) {\n            return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`)\n    }\n\n    getInitialCards() {\n        return this._get('cards');\n    }\n\n    getUserInformation() {\n        return this._get('users/me');\n    }\n\n    setUserUpdate(model) {\n        return this._patch('users/me', model);\n    }\n\n    setCreateCard(model) {\n        return this._post('cards', model);\n    }\n\n    setDeleteCard(cardId) {\n        return this._delete(`cards/${cardId}`);\n    }\n\n    setUserAvatar(model) {\n        return this._patch('users/me/avatar', model);\n    }\n\n    changeLikeCardStatus(cardId, like) {\n        if (like) {\n           return this._put(`cards/${cardId}/likes`);\n        } else {\n           return this._delete(`cards/${cardId}/likes`)\n        }\n    }\n\n    setRegistration(model) {\n        return fetch(`${this._baseUrlAuth}signup`, {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify(model)\n        })\n            .then((res) => this._getResponseData(res))\n    }\n\n    getAuthorization(model) {\n        return fetch(`${this._baseUrlAuth}signin`, {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify(model)\n        })\n            .then((res) => this._getResponseData(res))\n    }\n\n    getValidationToken() {\n        return fetch(`${this._baseUrlAuth}users/me`, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                \"Authorization\" : `Bearer ${localStorage.getItem('token')}`\n            },\n        })\n            .then((res) => this._getResponseData(res))\n    }\n}\n\nconst api = new Api();\n\nexport default api;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}